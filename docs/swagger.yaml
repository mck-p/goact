basePath: /
definitions:
  data.AstroCondition:
    properties:
      is_sun_up:
        type: number
      moon_illumination:
        type: number
      moon_phase:
        type: string
      moonrise:
        type: string
      moonset:
        type: string
      sunrise:
        type: string
      sunset:
        type: string
    type: object
  data.Community:
    properties:
      _id:
        type: string
      created_at:
        type: string
      is_public:
        type: boolean
      name:
        type: string
      profile_schema:
        additionalProperties: true
        type: object
    type: object
  data.CommunityFeedItem:
    properties:
      _id:
        type: string
      author_id:
        type: string
      community_id:
        type: string
      created_at:
        type: string
      data:
        additionalProperties: true
        type: object
      type:
        type: string
      updated_at:
        type: string
    type: object
  data.CommunityMember:
    properties:
      community:
        type: string
      member:
        type: string
      profile:
        additionalProperties: true
        type: object
      profile_schema:
        additionalProperties: true
        type: object
      user_avatar:
        type: string
      user_name:
        type: string
    type: object
  data.CurrentWeatherUpstreamResponse:
    properties:
      cloud:
        type: number
      condition:
        $ref: '#/definitions/data.WeatherCondition'
      feelslike_c:
        type: number
      feelslike_f:
        type: number
      gust_kph:
        type: number
      gust_mph:
        type: number
      humidity:
        type: number
      precip_in:
        type: number
      precip_mm:
        type: number
      pressure_in:
        type: number
      pressure_mb:
        type: number
      temp_c:
        type: number
      temp_f:
        type: number
      uv:
        type: number
      vis_km:
        type: number
      vis_miles:
        type: number
      wind_degree:
        type: number
      wind_dir:
        type: string
      wind_kph:
        type: number
      wind_mph:
        type: number
    type: object
  data.DayWeatherUpstreamResponse:
    properties:
      avghumidity:
        type: number
      avgtemp_c:
        type: number
      avgtemp_f:
        type: number
      avgvis_km:
        type: number
      avgvis_miles:
        type: number
      condition:
        $ref: '#/definitions/data.WeatherCondition'
      daily_chance_of_rain:
        type: number
      daily_chance_of_snow:
        type: number
      daily_will_it_rain:
        type: number
      daily_will_it_snow:
        type: number
      maxtemp_c:
        type: number
      maxtemp_f:
        type: number
      mintemp_c:
        type: number
      mintemp_f:
        type: number
      totalprecip_in:
        type: number
      totalprecip_mm:
        type: number
      totalsnow_cm:
        type: number
      uv:
        type: number
      windchill_c:
        type: number
    type: object
  data.ForecastQueryUpstreamResponse:
    properties:
      current:
        $ref: '#/definitions/data.CurrentWeatherUpstreamResponse'
      forecast:
        properties:
          forecastday:
            items:
              $ref: '#/definitions/data.ForecastUpstreamResponse'
            type: array
        type: object
    type: object
  data.ForecastUpstreamResponse:
    properties:
      astro:
        $ref: '#/definitions/data.AstroCondition'
      day:
        $ref: '#/definitions/data.DayWeatherUpstreamResponse'
      hour:
        items:
          $ref: '#/definitions/data.HourWeatherUpstreamResponse'
        type: array
    type: object
  data.HourWeatherUpstreamResponse:
    properties:
      condition:
        $ref: '#/definitions/data.WeatherCondition'
      temp_c:
        type: number
      temp_f:
        type: number
      time:
        type: string
      time_epoch:
        type: integer
      windchill_c:
        type: number
      windchill_f:
        type: number
    type: object
  data.MessageGroup:
    properties:
      _id:
        type: string
      created_at:
        type: string
      name:
        type: string
    type: object
  data.User:
    properties:
      _id:
        type: string
      avatarUrl:
        type: string
      externalid:
        type: string
      name:
        type: string
    type: object
  data.WeatherCondition:
    properties:
      code:
        type: number
      icon:
        type: string
      text:
        type: string
    type: object
  server.CreateCommunityRequest:
    properties:
      is_public:
        type: boolean
      name:
        type: string
      profile_schema:
        additionalProperties: true
        type: object
    type: object
  server.ErrorResponse-server_GenericError:
    properties:
      error:
        $ref: '#/definitions/server.GenericError'
      includes:
        items: {}
        type: array
      links:
        additionalProperties:
          $ref: '#/definitions/server.Link'
        type: object
      metadata: {}
    type: object
  server.ErrorResponse-server_HealthcheckResponse:
    properties:
      error:
        $ref: '#/definitions/server.HealthcheckResponse'
      includes:
        items: {}
        type: array
      links:
        additionalProperties:
          $ref: '#/definitions/server.Link'
        type: object
      metadata: {}
    type: object
  server.GenericError:
    properties:
      message:
        type: string
    type: object
  server.GetGroupsResponse:
    properties:
      groups:
        items: {}
        type: array
    type: object
  server.GetMessageResponse:
    properties:
      messages:
        items: {}
        type: array
    type: object
  server.HealthcheckResponse:
    properties:
      healthy:
        type: boolean
      status:
        type: integer
    type: object
  server.Link:
    properties:
      href:
        type: string
      hreflang:
        type: string
      link:
        $ref: '#/definitions/server.Link'
      meta: {}
      rel:
        type: string
      title:
        type: string
    type: object
  server.MessageGroupRequest:
    properties:
      name:
        type: string
    type: object
  server.NewCommunityFeedItem:
    properties:
      data:
        additionalProperties: true
        type: object
      type:
        type: string
    type: object
  server.SuccessResponse-any:
    properties:
      data: {}
      includes:
        items: {}
        type: array
      links:
        additionalProperties:
          $ref: '#/definitions/server.Link'
        type: object
      metadata: {}
    type: object
  server.SuccessResponse-array_data_Community:
    properties:
      data:
        items:
          $ref: '#/definitions/data.Community'
        type: array
      includes:
        items: {}
        type: array
      links:
        additionalProperties:
          $ref: '#/definitions/server.Link'
        type: object
      metadata: {}
    type: object
  server.SuccessResponse-array_data_CommunityFeedItem:
    properties:
      data:
        items:
          $ref: '#/definitions/data.CommunityFeedItem'
        type: array
      includes:
        items: {}
        type: array
      links:
        additionalProperties:
          $ref: '#/definitions/server.Link'
        type: object
      metadata: {}
    type: object
  server.SuccessResponse-array_data_CommunityMember:
    properties:
      data:
        items:
          $ref: '#/definitions/data.CommunityMember'
        type: array
      includes:
        items: {}
        type: array
      links:
        additionalProperties:
          $ref: '#/definitions/server.Link'
        type: object
      metadata: {}
    type: object
  server.SuccessResponse-data_Community:
    properties:
      data:
        $ref: '#/definitions/data.Community'
      includes:
        items: {}
        type: array
      links:
        additionalProperties:
          $ref: '#/definitions/server.Link'
        type: object
      metadata: {}
    type: object
  server.SuccessResponse-data_CommunityFeedItem:
    properties:
      data:
        $ref: '#/definitions/data.CommunityFeedItem'
      includes:
        items: {}
        type: array
      links:
        additionalProperties:
          $ref: '#/definitions/server.Link'
        type: object
      metadata: {}
    type: object
  server.SuccessResponse-data_CommunityMember:
    properties:
      data:
        $ref: '#/definitions/data.CommunityMember'
      includes:
        items: {}
        type: array
      links:
        additionalProperties:
          $ref: '#/definitions/server.Link'
        type: object
      metadata: {}
    type: object
  server.SuccessResponse-data_ForecastQueryUpstreamResponse:
    properties:
      data:
        $ref: '#/definitions/data.ForecastQueryUpstreamResponse'
      includes:
        items: {}
        type: array
      links:
        additionalProperties:
          $ref: '#/definitions/server.Link'
        type: object
      metadata: {}
    type: object
  server.SuccessResponse-data_MessageGroup:
    properties:
      data:
        $ref: '#/definitions/data.MessageGroup'
      includes:
        items: {}
        type: array
      links:
        additionalProperties:
          $ref: '#/definitions/server.Link'
        type: object
      metadata: {}
    type: object
  server.SuccessResponse-data_User:
    properties:
      data:
        $ref: '#/definitions/data.User'
      includes:
        items: {}
        type: array
      links:
        additionalProperties:
          $ref: '#/definitions/server.Link'
        type: object
      metadata: {}
    type: object
  server.SuccessResponse-server_GetGroupsResponse:
    properties:
      data:
        $ref: '#/definitions/server.GetGroupsResponse'
      includes:
        items: {}
        type: array
      links:
        additionalProperties:
          $ref: '#/definitions/server.Link'
        type: object
      metadata: {}
    type: object
  server.SuccessResponse-server_GetMessageResponse:
    properties:
      data:
        $ref: '#/definitions/server.GetMessageResponse'
      includes:
        items: {}
        type: array
      links:
        additionalProperties:
          $ref: '#/definitions/server.Link'
        type: object
      metadata: {}
    type: object
  server.SuccessResponse-server_HealthcheckResponse:
    properties:
      data:
        $ref: '#/definitions/server.HealthcheckResponse'
      includes:
        items: {}
        type: array
      links:
        additionalProperties:
          $ref: '#/definitions/server.Link'
        type: object
      metadata: {}
    type: object
  server.UpdateCommunityMemberProfile:
    properties:
      profile:
        additionalProperties: true
        type: object
    type: object
host: localhost:8080
info:
  contact:
    email: support@mck-p.com
    name: API Support
  description: goact API
  license:
    name: MIT
    url: https://opensource.org/license/mit/
  title: goact RESTful API
  version: 0.0.1
paths:
  /.well-known/healthcheck:
    get:
      description: Can be used for both readiness and liveness
      operationId: Healthcheck
      produces:
      - application/vnd.api+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.SuccessResponse-server_HealthcheckResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse-server_HealthcheckResponse'
      summary: Returns the health of the underlying system
      tags:
      - Internal
  /api/v1/communities:
    get:
      operationId: GetUserCommunities
      produces:
      - application/vnd.api+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.SuccessResponse-array_data_Community'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse-server_GenericError'
      summary: Retrieves the Communities that a User has access to
      tags:
      - Communities
    post:
      consumes:
      - application/json
      description: This will create a new Community and assign the creator as the
        only memberof that community
      operationId: CreateCommunity
      parameters:
      - description: New Community Information
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/server.CreateCommunityRequest'
      produces:
      - application/vnd.api+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.SuccessResponse-data_Community'
      summary: Creates a new Community
      tags:
      - Communities
  /api/v1/communities/{community_id}/members/{member_id}/profile:
    put:
      consumes:
      - application/json
      description: This will create a new Community and assign the creator as the
        only memberof that community
      operationId: CreateCommunity
      parameters:
      - description: New Community Information
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/server.UpdateCommunityMemberProfile'
      produces:
      - application/vnd.api+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.SuccessResponse-data_Community'
      summary: Creates a new Community
      tags:
      - Communities
  /api/v1/communities/{id}:
    delete:
      description: This will for realsies delete the communities and all related artifacts
      operationId: DeleteCommunity
      produces:
      - application/vnd.api+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.SuccessResponse-any'
      summary: Deletes a Community
      tags:
      - Communities
    get:
      operationId: GetUserCommunityById
      produces:
      - application/vnd.api+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.SuccessResponse-data_Community'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse-server_GenericError'
      summary: Retrieves the Community of a given ID
      tags:
      - Communities
  /api/v1/communities/{id}/items:
    get:
      operationId: GetcommunityFeedItems
      produces:
      - application/vnd.api+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.SuccessResponse-array_data_CommunityFeedItem'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse-server_GenericError'
      summary: Retrieves the Community Feed Items of a given Community ID
      tags:
      - Communities
    post:
      consumes:
      - application/json
      operationId: CreateCommunityFeedItem
      parameters:
      - description: Feed Item information
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/server.NewCommunityFeedItem'
      produces:
      - application/vnd.api+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/server.SuccessResponse-data_CommunityFeedItem'
      summary: Creates a new Community Feed Item
      tags:
      - Communities
  /api/v1/communities/{id}/members:
    get:
      operationId: GetCommunityMembers
      produces:
      - application/vnd.api+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.SuccessResponse-array_data_CommunityMember'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse-server_GenericError'
      summary: Retrieves the Community of a given ID
      tags:
      - Communities
  /api/v1/communities/{id}/members/{member_id}:
    get:
      operationId: GetCommunityMember
      produces:
      - application/vnd.api+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.SuccessResponse-data_CommunityMember'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse-server_GenericError'
      summary: Retrieves the Community of a given ID by their Member ID
      tags:
      - Communities
  /api/v1/messages/groups:
    get:
      operationId: GetUserMessageGroups
      produces:
      - application/vnd.api+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.SuccessResponse-server_GetGroupsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse-server_GenericError'
      summary: Retrieves the Message Groups that a User has access to
      tags:
      - Messages
    post:
      consumes:
      - application/json
      description: This will create a new Message Group and assign the creator as
        the only authorized user of that message group
      operationId: CreateMessageGroup
      parameters:
      - description: Message Group Information
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/server.MessageGroupRequest'
      produces:
      - application/vnd.api+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.SuccessResponse-data_MessageGroup'
      summary: Creates a new Message Group
      tags:
      - Messages
  /api/v1/messages/groups/{:id}:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.SuccessResponse-server_GetMessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse-server_GenericError'
  /api/v1/users/:id/messages:
    get:
      operationId: GetMessages
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Limit for pagination
        in: query
        name: limit
        type: integer
      - description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/vnd.api+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.SuccessResponse-server_GetMessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse-server_GenericError'
      summary: Retrieves the last N number of messages, given some offset
      tags:
      - Users
  /api/v1/users/{id}:
    get:
      operationId: GetUserById
      produces:
      - application/vnd.api+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.SuccessResponse-data_User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse-server_GenericError'
      security:
      - BearerToken: []
      summary: Returns the Goact User based on their internal ID
      tags:
      - Users
  /api/v1/users/external-id/{externalid}:
    get:
      operationId: GetUserByExternalId
      produces:
      - application/vnd.api+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.SuccessResponse-data_User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse-server_GenericError'
      security:
      - BearerToken: []
      summary: Returns the Goact User based on their external ID
      tags:
      - Users
  /api/v1/weather:
    get:
      operationId: GetWeather
      produces:
      - application/vnd.api+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.SuccessResponse-data_ForecastQueryUpstreamResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorResponse-server_GenericError'
      security:
      - BearerToken: []
      summary: Gets the last-checked weather conditions
      tags:
      - Weather
  /api/v1/webhooks:
    post:
      consumes:
      - application/json
      description: Handles incoming webhooks
      operationId: WebhookIngestion
      parameters:
      - description: Webhook payload
        in: body
        name: requestBody
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/vnd.api+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.SuccessResponse-any'
      summary: Handle Webhook
      tags:
      - Internal
securityDefinitions:
  BearerToken:
    description: JWT for authentication. Inclue Bearer
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
